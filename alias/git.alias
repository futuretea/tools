alias ref='grep -IPorh  "(?<=\")((github.com|gitee.com|k8s.io)/[^/]*/[^/]*)(?=/)" * | sort -u'
alias refb='refb(){grep -aPoh  "(?<=\")((github.com|gitee.com|k8s.io)/[^/]*/[^/]*)(?=/)" $1 | sort -u;};refb $@'

alias nocmt='git reset --soft HEAD^'
alias noadd='git reset HEAD'
alias nochg='git checkout --'
alias nomore='git clean -fd'
alias nobranch='nobranch(){branch=`git branch --show-current` && git checkout master && git branch -d "${branch}";};nobranch $@'

alias nopub='nopub(){git config --global url."$1".insteadOf "$2";};nopub $@'

alias ncmt='ncmt(){git log  --reverse --oneline | sed -n "${1}p";};ncmt $@'
ncmtb(){
    local nb=$(ncmt $1 | awk '{print $1}')
    git checkout -b commit-$1 "${nb}"
}

alias justgo='git push --force'

alias usefile='usefile(){git checkout $1 -- $2;};usefile $@'
alias usecmt='git cherry-pick'
alias showcmt='showcmt(){git log --oneline $@ | fzf --preview '"'"'showcommit {}'"'"' | cut -d " " -f 1;};showcmt $@'
alias nilcmt='git commit --allow-empty -m "empty commit"'
alias fixup='git commit --fixup'
alias autorebase='git rebase -i --autosquash'
alias execafter='execafter(){git rebase $1 --exec $2;};execafter $@'

usebranch(){
    local LINE
    local BRANCH=$(git branch -l -vv | fzf | awk '{print $1}')
    if [ x"${BRANCH}" != "x*" ];then
        git status -s | grep UU | awk '{print $2}' | while read -r LINE;do
            git checkout ${BRANCH} -- ${LINE};
        done
        git rebase --continue
    fi
}

git_proxy(){
    echo "set git proxy"
    git config --global http.proxy "${HTTPRPOXYURL}"
    git config --global https.proxy "${HTTPRPOXYURL}"
}

git_noproxy(){
    echo "unset git proxy"
    git config --global --unset http.proxy
    git config --global --unset https.proxy
}

cmt(){
    local commit_option=$1
    local msg=$2
    shift 2
    git add $@
    git commit ${commit_option} ${msg}
    git log --oneline
}

#gcb,gcm,gco
#gau,gcam
gcof(){
    local branch=$(git branch -l -vv | fzf | awk '{print $1}')
    if [ x"${branch}" != "x*" ];then
        git checkout "${branch}"
    fi
}

brrename(){
    local upstream=${3:-"origin"}
    git branch -m $1 $2
    git push $upstream :$1
    git push $upstream $2
}

recmt() {
    local msg=$(git log -n 1 --pretty=format:"%s" | xargs echo)
    git reset --soft HEAD^
    git commit -a -s -m "$msg"
}

recmtpush() {
    local msg=$(git log -n 1 --pretty=format:"%s" | xargs echo)
    git reset --soft HEAD^
    git commit -a -s -m "$msg"
    git push --force
}

gnco(){
    git pull
    git branch -D $1
    git checkout $1
}



alias origin='open $(git remote get-url origin |  sed -e "s/:/\//g" -e "s/git@//g" -e "s/\.git//g" -e "s/^github.com/https:\/\/github.com/g")'
alias upstream='open $(git remote get-url upstream |  sed -e "s/:/\//g" -e "s/git@//g" -e "s/\.git//g" -e "s/^github.com/https:\/\/github.com/g")'
alias upt='git pull upstream $(git_current_branch) && git push'
alias gcasm='git commit -a -s -m'
