alias cps='docker ps'
alias crun='docker run -it --rm'
alias cpid='cpid(){docker inspect --format "{{.State.Pid}}" "$1"};cpid $@'
alias cstrace='cstrace(){PID=$(cpid "$1");shift;sudo strace -tt -T -f -s 200 -p "${PID}" $@};cstrace $@'

alias creload='kill -HUP `pgrep dockerd`'

docker_proxy(){
    echo "set docker proxy"
    mkdir -p /etc/systemd/system/docker.service.d
    cat <<EOF >/etc/systemd/system/docker.service.d/http-proxy.conf
[Service]
Environment="HTTP_PROXY=${HTTPRPOXYURL}"
EOF
    cat <<EOF >/etc/systemd/system/docker.service.d/no-proxy.conf
[Service]
Environment="NO_PROXY=${NORPOXYURL}"
EOF
    cat <<EOF >/etc/systemd/system/docker.service.d/https-proxy.conf
[Service]
Environment="HTTPS_PROXY=${HTTPRPOXYURL}"
EOF
    systemctl daemon-reload
    systemctl restart docker
    systemctl show --property=Environment docker
}

docker_noproxy(){
    echo "unset docker proxy"
    rm -rf /etc/systemd/system/docker.service.d
    systemctl daemon-reload
    systemctl restart docker
    systemctl show --property=Environment docker
}

alias cpull='cpull(){docker pull $1:$(reg tags $1 | sort -rV | fzf +s);};cpull $@'
alias creload='kill -HUP `pgrep dockerd`'
ccp(){
if [ $# -lt 2 ]; then
cat <<HELP
USAGE:
    ccp.sh MIRROR NAME
HELP
else
local MIRROR=$1
local NAME=$2
if [[ ${NAME} =~ '/' ]]; then
local img=${MIRROR}/cache/${NAME}
else
local img=${MIRROR}/cache/library/${NAME}
fi
docker pull ${img}
docker tag ${img} ${NAME}
docker rmi ${img}
fi
}

ccps(){
if [ $# -lt 2 ]; then
USAGE:
    ccp.sh MIRROR FILE
HELP
else
local MIRROR=$1
local FILE=$2
    while read -r LINE; do
        ccp ${MIRROR} "$LINE"
    done <"${FILE}"
fi
}